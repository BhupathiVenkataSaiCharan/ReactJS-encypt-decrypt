{"version":3,"sources":["Both.js","App.js","index.js"],"names":["Both","encryptAES","text","key","CryptoJS","encrypt","toString","decryptAES","encryptedBase64","decrypted","decrypt","console","log","str","Utf8","length","e","handleInputTextChange","event","setState","inputText","target","value","encryptInputText","handleInputKeyChange","inputKey","encryptedBase64Input","state","handleDecryptKeyChange","decryptKey","decryptOutputText","handleMsgChange","outputText","testForProblems","i","setTimeout","passphrase","encrypted","decryptedText","error","this","className","onChange","style","width","height","marginRight","placeholder","Component","App","ReactDOM","render","document","getElementById"],"mappings":"8MAyIeA,E,kDAhIb,aAAe,IAAD,8BACZ,gBAeFC,WAAa,SAACC,EAAMC,GAClB,OAAOC,MAAaC,QAAQH,EAAMC,GAAKG,YAjB3B,EA2BdC,WAAa,SAACC,EAAiBL,GAC7B,IAAMM,EAAYL,MAAaM,QAAQF,EAAiBL,GACxD,GAAIM,EACF,IACEE,QAAQC,IAAIH,GACZ,IAAMI,EAAMJ,EAAUH,SAASF,MAAaU,MAC5C,OAAID,EAAIE,OAAS,EACRF,EAEA,UAET,MAAOG,GACP,MAAO,UAGX,MAAO,WA1CK,EA6CdC,sBAAwB,SAACC,GACvB,EAAKC,SAAS,CACZC,UAAWF,EAAMG,OAAOC,OACvB,EAAKC,mBAhDI,EAmDdC,qBAAuB,SAACN,GACtB,EAAKC,SAAS,CACZM,SAAUP,EAAMG,OAAOC,OACtB,EAAKC,mBAtDI,EAyDdA,iBAAmB,WACjB,EAAKJ,SAAS,CACZO,qBAAsB,EAAKzB,WAAW,EAAK0B,MAAMP,UAAW,EAAKO,MAAMF,aA3D7D,EA+DdG,uBAAyB,SAACV,GACxB,EAAKC,SAAS,CACZU,WAAYX,EAAMG,OAAOC,OACxB,EAAKQ,oBAlEI,EAqEdC,gBAAkB,SAACb,GACjB,EAAKC,SAAS,CACZX,gBAAiBU,EAAMG,OAAOC,OAC7B,EAAKQ,oBAxEI,EA2EdA,kBAAoB,WAClB,EAAKX,SAAS,CACZa,WAAY,EAAKzB,WAAW,EAAKoB,MAAMnB,gBAAiB,EAAKmB,MAAME,eA7EzD,EAiFdI,gBAAkB,WAChB,IADuB,IAAD,WACXC,GACTC,YAAW,WACT,IACMC,EAAa,yFACbC,EAAY,EAAKpC,WAAWmC,EAFtB,OAIZD,YAAW,WACLC,IAAe,EAAK7B,WAAW8B,EALzB,QAMR1B,QAAQC,IAAI,iCAEb,IAAOsB,KACT,IAAMA,KAXX,iBAAmC,EAApB,IAhFf,EAAKP,MAAQ,CACXP,UAAW,GACXK,SAAU,GACVC,qBAAsB,GACtBlB,gBAAiB,GACjBqB,WAAY,GACZS,cAAe,IARL,E,0CAiGd,WACE,IAAOC,EAASC,KAAKb,MAAdY,MACP,OAAGA,EACM,6BAAKA,IAGZ,qCACE,sDACA,iDACA,sBAAKE,UAAU,aAAf,UACE,uBAAOA,UAAU,eAAenB,MAAOkB,KAAKb,MAAMP,UAAWsB,SAAUF,KAAKvB,sBAAuB0B,MAAO,CAACC,MAAM,MAAOC,OAAO,GAAIC,YAAa,IAAKC,YAAY,eACjK,uBAAON,UAAU,eAAenB,MAAOkB,KAAKb,MAAMF,SAAUiB,SAAUF,KAAKhB,qBAAsBmB,MAAO,CAACC,MAAM,MAAOC,OAAO,IAAKE,YAAY,WAGhJ,qBAAKN,UAAU,SAAf,SAAwB,+BAAOD,KAAKb,MAAMD,yBAE1C,sDACA,iDACA,sBAAKe,UAAU,aAAf,UACE,uBAAOA,UAAU,eAAenB,MAAOkB,KAAKb,MAAMnB,gBAAiBkC,SAAUF,KAAKT,gBAAiBY,MAAO,CAACC,MAAM,MAAOC,OAAO,GAAIC,YAAa,IAAKC,YAAY,qBACjK,uBAAON,UAAU,eAAenB,MAAOkB,KAAKb,MAAMxB,IAAKuC,SAAUF,KAAKZ,uBAAwBe,MAAO,CAACC,MAAM,MAAOC,OAAO,IAAKE,YAAY,WAG7I,qBAAKN,UAAU,SAAf,SAAwB,+BAAOD,KAAKb,MAAMK,sB,GAzH/BgB,aCJEC,E,4JACnB,WACE,OACE,8BACE,cAAC,EAAD,U,GAJyBD,aCAjCE,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6b4fd28c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n// const cfg = {\r\n//   mode: CryptoJS.mode.CBC,\r\n//   padding: CryptoJS.pad.Pkcs7\r\n// };\r\n \r\nclass Both extends Component {\r\n  constructor() {\r\n    super(); \r\n    this.state = {\r\n      inputText: '',\r\n      inputKey: '',\r\n      encryptedBase64Input: '',\r\n      encryptedBase64: '',\r\n      decryptKey: '',\r\n      decryptedText: ''\r\n    };\r\n\r\n  }\r\n\r\n  /*\r\n  * Encrypt a derived hd private key with a given pin and return it in Base64 form\r\n  */\r\n  encryptAES = (text, key) => {\r\n    return CryptoJS.AES.encrypt(text, key).toString();\r\n  };\r\n\r\n\r\n  /**\r\n   * Decrypt an encrypted message\r\n   * @param encryptedBase64 encrypted data in base64 format\r\n   * @param key The secret key\r\n   * @return The decrypted content\r\n   */\r\n  decryptAES = (encryptedBase64, key) => {\r\n    const decrypted = CryptoJS.AES.decrypt(encryptedBase64, key);\r\n    if (decrypted) {\r\n      try {\r\n        console.log(decrypted);\r\n        const str = decrypted.toString(CryptoJS.enc.Utf8);\r\n        if (str.length > 0) {\r\n          return str;\r\n        } else {\r\n          return 'error 1';\r\n        } \r\n      } catch (e) {\r\n        return 'error 2';\r\n      }\r\n    }\r\n    return 'error 3';\r\n  };\r\n\r\n  handleInputTextChange = (event) => {\r\n    this.setState({\r\n      inputText: event.target.value\r\n    }, this.encryptInputText)\r\n  }\r\n\r\n  handleInputKeyChange = (event) => {\r\n    this.setState({\r\n      inputKey: event.target.value\r\n    }, this.encryptInputText)\r\n  }\r\n\r\n  encryptInputText = () => {\r\n    this.setState({\r\n      encryptedBase64Input: this.encryptAES(this.state.inputText, this.state.inputKey)\r\n    })\r\n  }\r\n\r\n  handleDecryptKeyChange = (event) => {\r\n    this.setState({\r\n      decryptKey: event.target.value\r\n    }, this.decryptOutputText)\r\n  }\r\n\r\n  handleMsgChange = (event) => {\r\n    this.setState({\r\n      encryptedBase64: event.target.value\r\n    }, this.decryptOutputText)\r\n  }\r\n\r\n  decryptOutputText = () => {\r\n    this.setState({\r\n      outputText: this.decryptAES(this.state.encryptedBase64, this.state.decryptKey)\r\n    })\r\n  }\r\n\r\n  testForProblems = () => {\r\n    for (const i = 0; i < 20000; i++) {\r\n      setTimeout(() => {\r\n        const key = '123';\r\n        const passphrase = 'this is a very long passphrase with a ton of words in it but it shouldnt really matter';\r\n        const encrypted = this.encryptAES(passphrase, key);\r\n\r\n        setTimeout(() => {\r\n          if (passphrase !== this.decryptAES(encrypted, key)) {\r\n            console.log('big trouble in little tokyo');\r\n          }\r\n        }, 1000 + i);\r\n      }, 100 + i);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {error} = this.state;\r\n    if(error){\r\n      return <h3>{error}</h3>\r\n    }\r\n    return (\r\n      <>\r\n        <h1>Crypto-JS encryptAES</h1>\r\n        <p>encrypt the data</p>\r\n        <div className=\"form-group\">\r\n          <input className=\"form-control\" value={this.state.inputText} onChange={this.handleInputTextChange} style={{width:'40%', height:40, marginRight: 20}} placeholder=\"Input Text\" /> \r\n          <input className=\"form-control\" value={this.state.inputKey} onChange={this.handleInputKeyChange} style={{width:'40%', height:40}} placeholder=\"Key\" />\r\n        </div>\r\n\r\n        <pre className=\"output\"><code>{this.state.encryptedBase64Input}</code></pre>\r\n\r\n        <h1>Crypto-JS decryptAES</h1>\r\n        <p>dncrypt the data</p>\r\n        <div className=\"form-group\">\r\n          <input className=\"form-control\" value={this.state.encryptedBase64} onChange={this.handleMsgChange} style={{width:'40%', height:40, marginRight: 20}} placeholder=\"Encrypted String\" /> \r\n          <input className=\"form-control\" value={this.state.key} onChange={this.handleDecryptKeyChange} style={{width:'40%', height:40}} placeholder=\"Key\" />\r\n        </div>\r\n\r\n        <pre className=\"output\"><code>{this.state.outputText}</code></pre>\r\n        {/* <small><a href=\"https://stackblitz.com/edit/cryptojs-aes-encrypt-decrypt\" target=\"_blank\">(View source code)</a></small> */}\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Both;\r\n","import React, { Component } from 'react'\nimport Both from './Both'\n// import Onlyencrypt from './Onlyencrypt'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Both/>\n        {/* <Onlyencrypt/> */}\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}